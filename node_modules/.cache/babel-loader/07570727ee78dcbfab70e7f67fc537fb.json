{"ast":null,"code":"var _jsxFileName = \"/Users/az/Desktop/calendar-app/src/context/ContextWrapper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction savedEventsReducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case 'push':\n      return [...state, payload];\n\n    case 'update':\n      return state.map(evt => evt.id === payload.id ? payload : evt);\n\n    case 'delete':\n      return state.filter(evt => evt.id !== payload.id);\n\n    default:\n      throw new Error();\n  }\n}\n\nfunction initEvents() {\n  const storageEvents = localStorage.getItem('savedEvents');\n  const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n  return parsedEvents;\n}\n\nexport default function ContextWrapper(props) {\n  _s();\n\n  const [monthIndex, setMonthIndex] = React.useState(dayjs().month());\n  const [smallCalendarMonth, setSmallCalendarMonth] = React.useState(null);\n  const [daySelected, setDaySelected] = React.useState(dayjs());\n  const [showEventModal, setShowEventModal] = React.useState(false);\n  const [selectedEvent, setSelectedEvent] = React.useState(null);\n  const [labels, setLabels] = React.useState([]);\n  const [savedEvents, dispatchCallEvent] = React.useReducer(savedEventsReducer, [], initEvents);\n  const filteredEvents = React.useMemo(() => {\n    return savedEvents.filter(evt => labels.filter(lbl => lbl.checked).map(lbl => lbl.label).includes(evt.label));\n  }, [savedEvents, labels]);\n  React.useEffect(() => {\n    localStorage.setItem('savedEvents', JSON.stringify(savedEvents));\n  }, [savedEvents]);\n  React.useEffect(() => {\n    setLabels(prevLabels => {\n      return [...new Set(savedEvents.map(evt => evt.label))].map(label => {\n        const currentLabel = prevLabels.find(lbl => lbl.label === label);\n        return {\n          label,\n          checked: currentLabel ? currentLabel.checked : true\n        };\n      });\n    });\n  }, [savedEvents]);\n  React.useEffect(() => {\n    if (smallCalendarMonth !== null) {\n      setMonthIndex(smallCalendarMonth);\n    }\n  }, [smallCalendarMonth]);\n  React.useEffect(() => {\n    if (!showEventModal) {\n      setSelectedEvent(null);\n    }\n  }, [showEventModal]);\n\n  function updateLabel(label) {\n    setLabels(labels.map(lbl => lbl.label === label.label ? label : lbl));\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      monthIndex,\n      setMonthIndex,\n      smallCalendarMonth,\n      setSmallCalendarMonth,\n      daySelected,\n      setDaySelected,\n      showEventModal,\n      setShowEventModal,\n      dispatchCallEvent,\n      selectedEvent,\n      setSelectedEvent,\n      savedEvents,\n      setLabels,\n      labels,\n      updateLabel,\n      filteredEvents\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContextWrapper, \"UW/daoqi7LZvoDm3IZY+zOSHCco=\");\n\n_c = ContextWrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextWrapper\");","map":{"version":3,"names":["React","useEffect","GlobalContext","dayjs","savedEventsReducer","state","type","payload","map","evt","id","filter","Error","initEvents","storageEvents","localStorage","getItem","parsedEvents","JSON","parse","ContextWrapper","props","monthIndex","setMonthIndex","useState","month","smallCalendarMonth","setSmallCalendarMonth","daySelected","setDaySelected","showEventModal","setShowEventModal","selectedEvent","setSelectedEvent","labels","setLabels","savedEvents","dispatchCallEvent","useReducer","filteredEvents","useMemo","lbl","checked","label","includes","setItem","stringify","prevLabels","Set","currentLabel","find","updateLabel","children"],"sources":["/Users/az/Desktop/calendar-app/src/context/ContextWrapper.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport GlobalContext from \"./GlobalContext\";\nimport dayjs from 'dayjs';\n\nfunction savedEventsReducer(state, { type, payload }) {\n    switch (type) {\n        case 'push':\n            return [...state, payload];\n        case 'update':\n            return state.map((evt) =>\n                evt.id === payload.id ? payload : evt);\n        case 'delete':\n            return state.filter((evt) => evt.id !== payload.id);\n        default:\n            throw new Error();\n    }\n}\nfunction initEvents() {\n    const storageEvents = localStorage.getItem('savedEvents');\n    const parsedEvents = storageEvents ? JSON.parse(storageEvents) : [];\n    return parsedEvents;\n}\n\nexport default function ContextWrapper(props) {\n    const [monthIndex, setMonthIndex] = React.useState(dayjs().month());\n    const [smallCalendarMonth, setSmallCalendarMonth] = React.useState(null);\n    const [daySelected, setDaySelected] = React.useState(dayjs());\n    const [showEventModal, setShowEventModal] = React.useState(false);\n    const [selectedEvent, setSelectedEvent] = React.useState(null);\n    const [labels, setLabels] = React.useState([]);\n    const [savedEvents, dispatchCallEvent] = React.useReducer(\n        savedEventsReducer,\n        [],\n        initEvents\n    );\n\n    const filteredEvents = React.useMemo(() => {\n        return savedEvents.filter((evt) =>\n            labels\n                .filter((lbl) => lbl.checked)\n                .map((lbl) => lbl.label)\n                .includes(evt.label));\n    }, [savedEvents, labels]);\n\n    React.useEffect(() => {\n        localStorage.setItem('savedEvents', JSON.stringify(savedEvents))\n    }, [savedEvents]);\n\n    React.useEffect(() => {\n        setLabels((prevLabels) => {\n            return [...new Set(savedEvents.map((evt) => evt.label))].map((label) => {\n                const currentLabel = prevLabels.find((lbl) => lbl.label === label);\n                return {\n                    label,\n                    checked: currentLabel ? currentLabel.checked : true\n                };\n            })\n        })\n    }, [savedEvents]);\n\n    React.useEffect(() => {\n        if (smallCalendarMonth !== null) {\n            setMonthIndex(smallCalendarMonth);\n        }\n    }, [smallCalendarMonth]);\n\n    React.useEffect(() => {\n        if (!showEventModal) {\n            setSelectedEvent(null);\n        }\n    }, [showEventModal]);\n\n    function updateLabel(label) {\n        setLabels(\n            labels.map((lbl) => (lbl.label === label.label ? label : lbl))\n        );\n    }\n\n    return (\n        <GlobalContext.Provider\n            value={{\n                monthIndex,\n                setMonthIndex,\n                smallCalendarMonth,\n                setSmallCalendarMonth,\n                daySelected,\n                setDaySelected,\n                showEventModal,\n                setShowEventModal,\n                dispatchCallEvent,\n                selectedEvent,\n                setSelectedEvent,\n                savedEvents,\n                setLabels,\n                labels,\n                updateLabel,\n                filteredEvents,\n            }}\n        >\n            {props.children}\n        </GlobalContext.Provider>\n    )\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}